// Code generated by MockGen. DO NOT EDIT.
// Source: pdn/media (interfaces: Media)

// Package media is a generated GoMock package.
package media

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMedia is a mock of Media interface.
type MockMedia struct {
	ctrl     *gomock.Controller
	recorder *MockMediaMockRecorder
}

// MockMediaMockRecorder is the mock recorder for MockMedia.
type MockMediaMockRecorder struct {
	mock *MockMedia
}

// NewMockMedia creates a new mock instance.
func NewMockMedia(ctrl *gomock.Controller) *MockMedia {
	mock := &MockMedia{ctrl: ctrl}
	mock.recorder = &MockMediaMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMedia) EXPECT() *MockMediaMockRecorder {
	return m.recorder
}

// AddForwarder mocks base method.
func (m *MockMedia) AddForwarder(arg0, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddForwarder", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddForwarder indicates an expected call of AddForwarder.
func (mr *MockMediaMockRecorder) AddForwarder(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddForwarder", reflect.TypeOf((*MockMedia)(nil).AddForwarder), arg0, arg1, arg2)
}

// AddReceiver mocks base method.
func (m *MockMedia) AddReceiver(arg0, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddReceiver", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddReceiver indicates an expected call of AddReceiver.
func (mr *MockMediaMockRecorder) AddReceiver(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddReceiver", reflect.TypeOf((*MockMedia)(nil).AddReceiver), arg0, arg1, arg2)
}

// AddSender mocks base method.
func (m *MockMedia) AddSender(arg0, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddSender", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddSender indicates an expected call of AddSender.
func (mr *MockMediaMockRecorder) AddSender(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSender", reflect.TypeOf((*MockMedia)(nil).AddSender), arg0, arg1, arg2)
}

// GetForwarder mocks base method.
func (m *MockMedia) GetForwarder(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetForwarder", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetForwarder indicates an expected call of GetForwarder.
func (mr *MockMediaMockRecorder) GetForwarder(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetForwarder", reflect.TypeOf((*MockMedia)(nil).GetForwarder), arg0)
}
